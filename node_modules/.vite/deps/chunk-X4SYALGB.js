// node_modules/@tauri-apps/api/chunk-FEIY7W7S.js
var d = Object.defineProperty;
var e = (c2, a3) => {
  for (var b in a3)
    d(c2, b, { get: a3[b], enumerable: true });
};

// node_modules/@tauri-apps/api/chunk-5UWJICAP.js
var w = {};
e(w, { convertFileSrc: () => u, invoke: () => d2, transformCallback: () => s });
function l() {
  return window.crypto.getRandomValues(new Uint32Array(1))[0];
}
function s(r, n = false) {
  let e2 = l(), t = `_${e2}`;
  return Object.defineProperty(window, t, { value: (o) => (n && Reflect.deleteProperty(window, t), r == null ? void 0 : r(o)), writable: false, configurable: true }), e2;
}
async function d2(r, n = {}) {
  return new Promise((e2, t) => {
    let o = s((i) => {
      e2(i), Reflect.deleteProperty(window, `_${a3}`);
    }, true), a3 = s((i) => {
      t(i), Reflect.deleteProperty(window, `_${o}`);
    }, true);
    window.__TAURI_IPC__({ cmd: r, callback: o, error: a3, ...n });
  });
}
function u(r, n = "asset") {
  let e2 = encodeURIComponent(r);
  return navigator.userAgent.includes("Windows") ? `https://${n}.localhost/${e2}` : `${n}://localhost/${e2}`;
}

// node_modules/@tauri-apps/api/chunk-RKMHWDGH.js
async function a(i) {
  return d2("tauri", i);
}

// node_modules/@tauri-apps/api/chunk-GP2EXCRB.js
var x = {};
e(x, { BaseDirectory: () => F, Dir: () => F, copyFile: () => c, createDir: () => d3, exists: () => v, readBinaryFile: () => a2, readDir: () => m, readTextFile: () => l2, removeDir: () => g, removeFile: () => O, renameFile: () => _, writeBinaryFile: () => f, writeFile: () => u2, writeTextFile: () => u2 });
var F = ((n) => (n[n.Audio = 1] = "Audio", n[n.Cache = 2] = "Cache", n[n.Config = 3] = "Config", n[n.Data = 4] = "Data", n[n.LocalData = 5] = "LocalData", n[n.Desktop = 6] = "Desktop", n[n.Document = 7] = "Document", n[n.Download = 8] = "Download", n[n.Executable = 9] = "Executable", n[n.Font = 10] = "Font", n[n.Home = 11] = "Home", n[n.Picture = 12] = "Picture", n[n.Public = 13] = "Public", n[n.Runtime = 14] = "Runtime", n[n.Template = 15] = "Template", n[n.Video = 16] = "Video", n[n.Resource = 17] = "Resource", n[n.App = 18] = "App", n[n.Log = 19] = "Log", n[n.Temp = 20] = "Temp", n[n.AppConfig = 21] = "AppConfig", n[n.AppData = 22] = "AppData", n[n.AppLocalData = 23] = "AppLocalData", n[n.AppCache = 24] = "AppCache", n[n.AppLog = 25] = "AppLog", n))(F || {});
async function l2(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readTextFile", path: i, options: t } });
}
async function a2(i, t = {}) {
  let s2 = await a({ __tauriModule: "Fs", message: { cmd: "readFile", path: i, options: t } });
  return Uint8Array.from(s2);
}
async function u2(i, t, s2) {
  typeof s2 == "object" && Object.freeze(s2), typeof i == "object" && Object.freeze(i);
  let e2 = { path: "", contents: "" }, r = s2;
  return typeof i == "string" ? e2.path = i : (e2.path = i.path, e2.contents = i.contents), typeof t == "string" ? e2.contents = t ?? "" : r = t, a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(new TextEncoder().encode(e2.contents)), options: r } });
}
async function f(i, t, s2) {
  typeof s2 == "object" && Object.freeze(s2), typeof i == "object" && Object.freeze(i);
  let e2 = { path: "", contents: [] }, r = s2;
  return typeof i == "string" ? e2.path = i : (e2.path = i.path, e2.contents = i.contents), t && "dir" in t ? r = t : typeof i == "string" && (e2.contents = t ?? []), a({ __tauriModule: "Fs", message: { cmd: "writeFile", path: e2.path, contents: Array.from(e2.contents instanceof ArrayBuffer ? new Uint8Array(e2.contents) : e2.contents), options: r } });
}
async function m(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "readDir", path: i, options: t } });
}
async function d3(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "createDir", path: i, options: t } });
}
async function g(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeDir", path: i, options: t } });
}
async function c(i, t, s2 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "copyFile", source: i, destination: t, options: s2 } });
}
async function O(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "removeFile", path: i, options: t } });
}
async function _(i, t, s2 = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "renameFile", oldPath: i, newPath: t, options: s2 } });
}
async function v(i, t = {}) {
  return a({ __tauriModule: "Fs", message: { cmd: "exists", path: i, options: t } });
}

export {
  e,
  a,
  F,
  l2 as l,
  a2,
  u2 as u,
  f,
  m,
  d3 as d,
  g,
  c,
  O,
  _,
  v
};
//# sourceMappingURL=chunk-X4SYALGB.js.map
